---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
paste("Tiene ", nrow(df_seeds), "filas y ", ncol(df_seeds), " columnas.")
```

#### PREGUNTA 2

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
# Conversión a factor y asignación de etiquetas
df_seeds$tipo <- factor(df_seeds$tipo,labels=c("Kama", "Rosa", "Canadian"))

# Visualización
summary(df_seeds)

```

#### PREGUNTA 3

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
# Se muestra el precio redondeado
paste("El peso medio del tipo Kama es:", round(mean(df_seeds[df_seeds$tipo == "Kama", "area"])), 2)
paste("El peso medio del tipo Rosa es:", round(mean(df_seeds[df_seeds$tipo == "Rosa", "area"])), 2)
paste("El peso medio del tipo Canadian es:", round(mean(df_seeds[df_seeds$tipo == "Canadian", "area"])), 2)
```

#### PREGUNTA 4

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: 'El gráfico es un diagrama de cajas o boxplot. La línea del centro de la caja es la mediana, que representa el valor de la distribución con la mitad de los elementos por arriba y la otra mitad por abajo.'

#### PREGUNTA 5

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x=compacto, y=area, color=tipo)) + geom_point()
```

#### PREGUNTA 6

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: 'La línea hace añade una nueva columna al dataset llamada is_karma donde se indica si el tipo de semilla es Karma o no. La nueva columna tiene un valor booleano que se establece en función del valor de la columna 'tipo', siendo verdadero si el tipo es 'Kama', y falso en caso contrario.

```{r}
# Visualización de datos
paste(df_seeds[, c("tipo", "is_kama")])

```

#### PREGUNTA 7

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
summary(idx)
```

**Respuesta**: 'A la hora de evaluar cómo funciona nuestro modelo, es aconsejable usar datos nuevos ya que evaluarlo con las muestras usadas para su entrenamiento, podría provocar la contaminación del resultado final y que no se pudiera establecer con precisión el comportamiento de ese modelo ante datos nuevos. Por este motivo, una forma de hacer esa medición es dividir los datos en dos grupos:

1.  Training. Con el que vamos a entrenar nuestro modelo.
2.  Testing. Aquel que se va a usar en la parte final y que vamos a utilizar para determinar cómo de bueno es mi modelo.'

#### PREGUNTA 8

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: 'Modelo de regresión logística, ya que a partir de la nueva columna is_karma y sus valores booleanos queremos realizar una clasificación'

#### PREGUNTA 9

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
model <- glm(df_seeds_train, formula=is_kama~area+perimetro+compacto+longitud+coeficient.asimetria+longitud.ranura, family='binomial')

# Visualización
summary(model)


```

#### PREGUNTA 10

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad? **Precisión** : cuántos aciertos tengo del total de predicciones. Nos habla de **calidad**. **Exhaustividad**: qué ratio de los aciertos positivos soy capaz de encontrar. Nos habla de **cantidad** de encuentros.

**Respuesta**.

```{r}

umbral <- 0.5
predicciones_test <- predict(model, df_seeds_test, type = "response")
predicciones <- predicciones_test > umbral
paste("Precisión:", sum(predicciones == df_seeds_test$is_kama)/length(predicciones))
paste("Exhaustividad:", sum(predicciones == df_seeds_test$is_kama & predicciones == 1)/sum(df_seeds_test$is_kama == 1))
```

#### PREGUNTA 11

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: 'Se generan unos números aleatorios . Se seleccionan solo las columnas indicadas dentro de 'select' y se agrupan los datos por su similitud en clusters (en esta caso 3). Con 'table' se crea una tabla que compara el valor real del tipo de semilla con el cluster correspondiente. De esta forma podemos evaluar la calidad del agrupamiento realizado.
